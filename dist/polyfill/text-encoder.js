globalThis.TextEncoder ??= class TD {
    encoding = 'utf8';
    encodeInto(source, destination) {
        let read = 0;
        let written = 0;
        let byteIndex = 0;
        for (const ch of source) {
            if (ch.codePointAt(0) >= 0x80)
                throw new Error("Not implemented: non-ASCII characters in Worklets");
            destination[byteIndex++] = ch.codePointAt(0);
            ++read;
            ++written;
        }
        return {
            read,
            written
        };
    }
    encode(input) {
        if (!input)
            return new Uint8Array();
        const b = new Uint8Array(new ArrayBuffer(input.length));
        for (let i = 0; i < input.length; ++i) {
            if (input[i].charCodeAt(0) < 0x80)
                b[i] = input[i].charCodeAt(0);
        }
        return b;
    }
};
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC1lbmNvZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BvbHlmaWxsL3RleHQtZW5jb2Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxVQUFVLENBQUMsV0FBVyxLQUFLLE1BQU0sRUFBRTtJQUMvQixRQUFRLEdBQUcsTUFBTSxDQUFDO0lBQ2xCLFVBQVUsQ0FBQyxNQUFjLEVBQUUsV0FBdUI7UUFFOUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO1FBQ2IsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBRWhCLElBQUksU0FBUyxHQUFHLENBQUMsQ0FBQztRQUNsQixLQUFLLE1BQU0sRUFBRSxJQUFJLE1BQU0sRUFBRSxDQUFDO1lBQ3RCLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUUsSUFBSSxJQUFJO2dCQUMxQixNQUFNLElBQUksS0FBSyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7WUFDekUsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUM5QyxFQUFFLElBQUksQ0FBQztZQUNQLEVBQUUsT0FBTyxDQUFDO1FBQ2QsQ0FBQztRQUVELE9BQU87WUFDSCxJQUFJO1lBQ0osT0FBTztTQUNWLENBQUE7SUFDTCxDQUFDO0lBQ0QsTUFBTSxDQUFDLEtBQWM7UUFDakIsSUFBSSxDQUFDLEtBQUs7WUFDTixPQUFPLElBQUksVUFBVSxFQUFFLENBQUM7UUFFNUIsTUFBTSxDQUFDLEdBQUcsSUFBSSxVQUFVLENBQUMsSUFBSSxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDeEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQztZQUNwQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSTtnQkFDN0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFFLENBQUE7UUFDdEMsQ0FBQztRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztDQUNKLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZ2xvYmFsVGhpcy5UZXh0RW5jb2RlciA/Pz0gY2xhc3MgVEQgaW1wbGVtZW50cyBUZXh0RW5jb2RlckNvbW1vbiB7XHJcbiAgICBlbmNvZGluZyA9ICd1dGY4JztcclxuICAgIGVuY29kZUludG8oc291cmNlOiBzdHJpbmcsIGRlc3RpbmF0aW9uOiBVaW50OEFycmF5KTogVGV4dEVuY29kZXJFbmNvZGVJbnRvUmVzdWx0IHtcclxuXHJcbiAgICAgICAgbGV0IHJlYWQgPSAwO1xyXG4gICAgICAgIGxldCB3cml0dGVuID0gMDtcclxuXHJcbiAgICAgICAgbGV0IGJ5dGVJbmRleCA9IDA7XHJcbiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBzb3VyY2UpIHtcclxuICAgICAgICAgICAgaWYgKGNoLmNvZGVQb2ludEF0KDApISA+PSAweDgwKVxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkOiBub24tQVNDSUkgY2hhcmFjdGVycyBpbiBXb3JrbGV0c1wiKTtcclxuICAgICAgICAgICAgZGVzdGluYXRpb25bYnl0ZUluZGV4KytdID0gY2guY29kZVBvaW50QXQoMCkhO1xyXG4gICAgICAgICAgICArK3JlYWQ7XHJcbiAgICAgICAgICAgICsrd3JpdHRlbjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHJlYWQsXHJcbiAgICAgICAgICAgIHdyaXR0ZW5cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBlbmNvZGUoaW5wdXQ/OiBzdHJpbmcpOiBVaW50OEFycmF5IHtcclxuICAgICAgICBpZiAoIWlucHV0KVxyXG4gICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoKTtcclxuXHJcbiAgICAgICAgY29uc3QgYiA9IG5ldyBVaW50OEFycmF5KG5ldyBBcnJheUJ1ZmZlcihpbnB1dC5sZW5ndGgpKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgKytpKSB7XHJcbiAgICAgICAgICAgIGlmIChpbnB1dFtpXS5jaGFyQ29kZUF0KDApIDwgMHg4MClcclxuICAgICAgICAgICAgICAgIGJbaV0gPSBpbnB1dFtpXS5jaGFyQ29kZUF0KDApIVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYjtcclxuICAgIH1cclxufVxyXG5cclxuIl19