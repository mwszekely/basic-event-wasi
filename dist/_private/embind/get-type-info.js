const DependenciesToWaitFor = new Map();
/**
 * Returns the parsed type info, converters, etc. for the given C++ RTTI TypeID pointer.
 *
 * Passing a null type ID is fine and will just result in a `null` at that spot in the returned array.
 */
export async function getTypeInfo(...typeIds) {
    return await Promise.all(typeIds.map(async (typeId) => {
        if (!typeId)
            return Promise.resolve(null);
        const withResolvers = getDependencyResolvers(typeId);
        return await withResolvers.promise;
    }));
}
export function getDependencyResolvers(typeId) {
    let withResolvers = DependenciesToWaitFor.get(typeId);
    if (withResolvers === undefined)
        DependenciesToWaitFor.set(typeId, withResolvers = { resolvedValue: undefined, ...Promise.withResolvers() });
    return withResolvers;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXR5cGUtaW5mby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9fcHJpdmF0ZS9lbWJpbmQvZ2V0LXR5cGUtaW5mby50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxNQUFNLHFCQUFxQixHQUFxRSxJQUFJLEdBQUcsRUFBK0QsQ0FBQztBQUV2Szs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLEtBQUssVUFBVSxXQUFXLENBQXlELEdBQUcsT0FBaUI7SUFFMUcsT0FBTyxNQUFPLE9BQU8sQ0FBQyxHQUFHLENBQXlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBbUMsRUFBRTtRQUM1RyxJQUFJLENBQUMsTUFBTTtZQUNQLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFLLENBQUMsQ0FBQztRQUVsQyxNQUFNLGFBQWEsR0FBRyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyRCxPQUFPLE1BQU8sYUFBYSxDQUFDLE9BQTJDLENBQUM7SUFDNUUsQ0FBQyxDQUFDLENBQTJCLENBQUM7QUFDbEMsQ0FBQztBQUVELE1BQU0sVUFBVSxzQkFBc0IsQ0FBZ0MsTUFBYztJQUNoRixJQUFJLGFBQWEsR0FBRyxxQkFBcUIsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFpRixDQUFDO0lBQ3RJLElBQUksYUFBYSxLQUFLLFNBQVM7UUFDM0IscUJBQXFCLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxhQUFhLEdBQUcsRUFBRSxhQUFhLEVBQUUsU0FBVSxFQUFFLEdBQUcsT0FBTyxDQUFDLGFBQWEsRUFBNkMsRUFBeUUsQ0FBQyxDQUFDO0lBQ25PLE9BQU8sYUFBYSxDQUFDO0FBQ3pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEVtYm91bmRSZWdpc3RlcmVkVHlwZSwgVHlwZUlELCBXaXJlVHlwZXMgfSBmcm9tIFwiLi90eXBlcy5qc1wiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBQcm9taXNlV2l0aFJlc29sdmVyc0FuZFZhbHVlPFQ+IGV4dGVuZHMgUHJvbWlzZVdpdGhSZXNvbHZlcnM8VD4ge1xyXG4gICAgcmVzb2x2ZWRWYWx1ZTogVDtcclxufVxyXG5jb25zdCBEZXBlbmRlbmNpZXNUb1dhaXRGb3I6IE1hcDxUeXBlSUQsIFByb21pc2VXaXRoUmVzb2x2ZXJzQW5kVmFsdWU8RW1ib3VuZFJlZ2lzdGVyZWRUeXBlPj4gPSBuZXcgTWFwPFR5cGVJRCwgUHJvbWlzZVdpdGhSZXNvbHZlcnNBbmRWYWx1ZTxFbWJvdW5kUmVnaXN0ZXJlZFR5cGU+PigpO1xyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgdGhlIHBhcnNlZCB0eXBlIGluZm8sIGNvbnZlcnRlcnMsIGV0Yy4gZm9yIHRoZSBnaXZlbiBDKysgUlRUSSBUeXBlSUQgcG9pbnRlci5cclxuICpcclxuICogUGFzc2luZyBhIG51bGwgdHlwZSBJRCBpcyBmaW5lIGFuZCB3aWxsIGp1c3QgcmVzdWx0IGluIGEgYG51bGxgIGF0IHRoYXQgc3BvdCBpbiB0aGUgcmV0dXJuZWQgYXJyYXkuXHJcbiAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VHlwZUluZm88RSBleHRlbmRzIChFbWJvdW5kUmVnaXN0ZXJlZFR5cGUgfCBudWxsIHwgdW5kZWZpbmVkKVtdPiguLi50eXBlSWRzOiBudW1iZXJbXSk6IFByb21pc2U8RT4ge1xyXG5cclxuICAgIHJldHVybiBhd2FpdCAoUHJvbWlzZS5hbGw8Tm9uTnVsbGFibGU8RVtudW1iZXJdPj4odHlwZUlkcy5tYXAoYXN5bmMgKHR5cGVJZCk6IFByb21pc2U8Tm9uTnVsbGFibGU8RVtudW1iZXJdPj4gPT4ge1xyXG4gICAgICAgIGlmICghdHlwZUlkKVxyXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG51bGwhKTtcclxuXHJcbiAgICAgICAgY29uc3Qgd2l0aFJlc29sdmVycyA9IGdldERlcGVuZGVuY3lSZXNvbHZlcnModHlwZUlkKTtcclxuICAgICAgICByZXR1cm4gYXdhaXQgKHdpdGhSZXNvbHZlcnMucHJvbWlzZSBhcyBQcm9taXNlPE5vbk51bGxhYmxlPEVbbnVtYmVyXT4+KTtcclxuICAgIH0pKSBhcyB1bmtub3duIGFzIFByb21pc2U8RT4pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVwZW5kZW5jeVJlc29sdmVyczxXaXJlVHlwZSBleHRlbmRzIFdpcmVUeXBlcywgVD4odHlwZUlkOiBudW1iZXIpOiBQcm9taXNlV2l0aFJlc29sdmVyc0FuZFZhbHVlPEVtYm91bmRSZWdpc3RlcmVkVHlwZTxXaXJlVHlwZSwgVD4+IHtcclxuICAgIGxldCB3aXRoUmVzb2x2ZXJzID0gRGVwZW5kZW5jaWVzVG9XYWl0Rm9yLmdldCh0eXBlSWQpIGFzIFByb21pc2VXaXRoUmVzb2x2ZXJzQW5kVmFsdWU8RW1ib3VuZFJlZ2lzdGVyZWRUeXBlPFdpcmVUeXBlLCBUPj4gfCB1bmRlZmluZWQ7XHJcbiAgICBpZiAod2l0aFJlc29sdmVycyA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgIERlcGVuZGVuY2llc1RvV2FpdEZvci5zZXQodHlwZUlkLCB3aXRoUmVzb2x2ZXJzID0geyByZXNvbHZlZFZhbHVlOiB1bmRlZmluZWQhLCAuLi5Qcm9taXNlLndpdGhSZXNvbHZlcnM8RW1ib3VuZFJlZ2lzdGVyZWRUeXBlPFdpcmVUeXBlcywgdW5rbm93bj4+KCkgfSBzYXRpc2ZpZXMgUHJvbWlzZVdpdGhSZXNvbHZlcnNBbmRWYWx1ZTxFbWJvdW5kUmVnaXN0ZXJlZFR5cGU+IGFzIG5ldmVyKTtcclxuICAgIHJldHVybiB3aXRoUmVzb2x2ZXJzO1xyXG59XHJcbiJdfQ==