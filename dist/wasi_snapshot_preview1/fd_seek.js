import { EBADF, ESUCCESS } from "../errno.js";
export class FileDescriptorSeekEvent extends CustomEvent {
    constructor(fileDescriptor) {
        super("fd_seek", { cancelable: true, detail: { fileDescriptor } });
    }
}
/** POSIX lseek */
export function fd_seek(fd, offset, whence, offsetOut) {
    if (this.dispatchEvent(new FileDescriptorSeekEvent(fd))) {
        switch (fd) {
            case 0:
                break;
            case 1:
                break;
            case 2:
                break;
            default:
                return EBADF;
        }
    }
    return ESUCCESS;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmRfc2Vlay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy93YXNpX3NuYXBzaG90X3ByZXZpZXcxL2ZkX3NlZWsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFjOUMsTUFBTSxPQUFPLHVCQUF3QixTQUFRLFdBQTBDO0lBQ25GLFlBQVksY0FBc0I7UUFDOUIsS0FBSyxDQUFDLFNBQVMsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsY0FBYyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7Q0FDSjtBQUVELGtCQUFrQjtBQUNsQixNQUFNLFVBQVUsT0FBTyxDQUF5QixFQUFrQixFQUFFLE1BQWMsRUFBRSxNQUFjLEVBQUUsU0FBMEI7SUFDMUgsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksdUJBQXVCLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ3RELFFBQVEsRUFBRSxFQUFFLENBQUM7WUFDVCxLQUFLLENBQUM7Z0JBQ0YsTUFBTTtZQUNWLEtBQUssQ0FBQztnQkFDRixNQUFNO1lBQ1YsS0FBSyxDQUFDO2dCQUNGLE1BQU07WUFDVjtnQkFDSSxPQUFPLEtBQUssQ0FBQztRQUNyQixDQUFDO0lBQ0wsQ0FBQztJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFQkFERiwgRVNVQ0NFU1MgfSBmcm9tIFwiLi4vZXJybm8uanNcIjtcclxuaW1wb3J0IHR5cGUgeyBGaWxlRGVzY3JpcHRvciwgUG9pbnRlciB9IGZyb20gXCIuLi90eXBlcy5qc1wiO1xyXG5pbXBvcnQgdHlwZSB7IEluc3RhbnRpYXRlZFdhc20gfSBmcm9tIFwiLi4vd2FzbS5qc1wiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBGaWxlRGVzY3JpcHRvclNlZWtFdmVudERldGFpbCB7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBbZmlsZSBkZXNjcmlwdG9yXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9GaWxlX2Rlc2NyaXB0b3IpLCBhIDAtaW5kZXhlZCBudW1iZXIgZGVzY3JpYmluZyB3aGVyZSB0aGUgZGF0YSBpcyBnb2luZyB0by9jb21pbmcgZnJvbS5cclxuICAgICAqIFxyXG4gICAgICogSXQncyBtb3JlLW9yLWxlc3MgW3VuaXZlcnNhbGx5IGV4cGVjdGVkXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9TdGFuZGFyZF9zdHJlYW0pIHRoYXQgMCBpcyBmb3IgaW5wdXQsIDEgZm9yIG91dHB1dCwgYW5kIDIgZm9yIGVycm9ycyxcclxuICAgICAqIHNvIHlvdSBjYW4gbWFwIDEgdG8gYGNvbnNvbGUubG9nYCBhbmQgMiB0byBgY29uc29sZS5lcnJvcmAuIFxyXG4gICAgICovXHJcbiAgICBmaWxlRGVzY3JpcHRvcjogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRmlsZURlc2NyaXB0b3JTZWVrRXZlbnQgZXh0ZW5kcyBDdXN0b21FdmVudDxGaWxlRGVzY3JpcHRvclNlZWtFdmVudERldGFpbD4ge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZURlc2NyaXB0b3I6IG51bWJlcikge1xyXG4gICAgICAgIHN1cGVyKFwiZmRfc2Vla1wiLCB7IGNhbmNlbGFibGU6IHRydWUsIGRldGFpbDogeyBmaWxlRGVzY3JpcHRvciB9IH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4vKiogUE9TSVggbHNlZWsgKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGZkX3NlZWsodGhpczogSW5zdGFudGlhdGVkV2FzbSwgZmQ6IEZpbGVEZXNjcmlwdG9yLCBvZmZzZXQ6IG51bWJlciwgd2hlbmNlOiBudW1iZXIsIG9mZnNldE91dDogUG9pbnRlcjxudW1iZXI+KTogdHlwZW9mIEVCQURGIHwgdHlwZW9mIEVTVUNDRVNTIHtcclxuICAgIGlmICh0aGlzLmRpc3BhdGNoRXZlbnQobmV3IEZpbGVEZXNjcmlwdG9yU2Vla0V2ZW50KGZkKSkpIHtcclxuICAgICAgICBzd2l0Y2ggKGZkKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gRUJBREY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIEVTVUNDRVNTO1xyXG59XHJcbiJdfQ==