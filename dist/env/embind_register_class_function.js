import { createGlueFunction } from "../_private/embind/create-glue-function.js";
import { EmboundClasses } from "../_private/embind/embound-class.js";
import { readArrayOfTypes } from "../_private/embind/read-array-of-types.js";
import { _embind_register } from "../_private/embind/register.js";
import { InstantiatedWasm } from "../wasm.js";
export function _embind_register_class_function(rawClassTypeId, methodNamePtr, argCount, rawArgTypesPtr, // [ReturnType, ThisType, Args...]
invokerSignaturePtr, invokerIndex, invokerContext, _isPureVirtual, _isAsync) {
    const [returnTypeId, _thisTypeId, ...argTypeIds] = readArrayOfTypes(this, argCount, rawArgTypesPtr);
    //console.assert(thisTypeId != rawClassTypeId,`Internal error; expected the RTTI pointers for the class type and its pointer type to be different.`);
    _embind_register(this, methodNamePtr, async (name) => {
        EmboundClasses[rawClassTypeId].prototype[name] = await createGlueFunction(this, name, returnTypeId, argTypeIds, invokerSignaturePtr, invokerIndex, invokerContext);
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1iaW5kX3JlZ2lzdGVyX2NsYXNzX2Z1bmN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Vudi9lbWJpbmRfcmVnaXN0ZXJfY2xhc3NfZnVuY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ2xFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUc5QyxNQUFNLFVBQVUsK0JBQStCLENBQzNDLGNBQXNCLEVBQ3RCLGFBQXFCLEVBQ3JCLFFBQWdCLEVBQ2hCLGNBQXNCLEVBQUUsa0NBQWtDO0FBQzFELG1CQUEyQixFQUMzQixZQUFvQixFQUNwQixjQUFzQixFQUN0QixjQUFzQixFQUN0QixRQUFnQjtJQUVoQixNQUFNLENBQUMsWUFBWSxFQUFFLFdBQVcsRUFBRSxHQUFHLFVBQVUsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDcEcscUpBQXFKO0lBQ3JKLGdCQUFnQixDQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFO1FBRWhELGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxTQUFtQixDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sa0JBQWtCLENBQ2hGLElBQUksRUFDSixJQUFJLEVBQ0osWUFBWSxFQUNaLFVBQVUsRUFDVixtQkFBbUIsRUFDbkIsWUFBWSxFQUNaLGNBQWMsQ0FDakIsQ0FBQztJQUNOLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUdsdWVGdW5jdGlvbiB9IGZyb20gXCIuLi9fcHJpdmF0ZS9lbWJpbmQvY3JlYXRlLWdsdWUtZnVuY3Rpb24uanNcIjtcclxuaW1wb3J0IHsgRW1ib3VuZENsYXNzZXMgfSBmcm9tIFwiLi4vX3ByaXZhdGUvZW1iaW5kL2VtYm91bmQtY2xhc3MuanNcIjtcclxuaW1wb3J0IHsgcmVhZEFycmF5T2ZUeXBlcyB9IGZyb20gXCIuLi9fcHJpdmF0ZS9lbWJpbmQvcmVhZC1hcnJheS1vZi10eXBlcy5qc1wiO1xyXG5pbXBvcnQgeyBfZW1iaW5kX3JlZ2lzdGVyIH0gZnJvbSBcIi4uL19wcml2YXRlL2VtYmluZC9yZWdpc3Rlci5qc1wiO1xyXG5pbXBvcnQgeyBJbnN0YW50aWF0ZWRXYXNtIH0gZnJvbSBcIi4uL3dhc20uanNcIjtcclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX2VtYmluZF9yZWdpc3Rlcl9jbGFzc19mdW5jdGlvbih0aGlzOiBJbnN0YW50aWF0ZWRXYXNtLFxyXG4gICAgcmF3Q2xhc3NUeXBlSWQ6IG51bWJlcixcclxuICAgIG1ldGhvZE5hbWVQdHI6IG51bWJlcixcclxuICAgIGFyZ0NvdW50OiBudW1iZXIsXHJcbiAgICByYXdBcmdUeXBlc1B0cjogbnVtYmVyLCAvLyBbUmV0dXJuVHlwZSwgVGhpc1R5cGUsIEFyZ3MuLi5dXHJcbiAgICBpbnZva2VyU2lnbmF0dXJlUHRyOiBudW1iZXIsXHJcbiAgICBpbnZva2VySW5kZXg6IG51bWJlcixcclxuICAgIGludm9rZXJDb250ZXh0OiBudW1iZXIsXHJcbiAgICBfaXNQdXJlVmlydHVhbDogbnVtYmVyLFxyXG4gICAgX2lzQXN5bmM6IG51bWJlclxyXG4pOiB2b2lkIHtcclxuICAgIGNvbnN0IFtyZXR1cm5UeXBlSWQsIF90aGlzVHlwZUlkLCAuLi5hcmdUeXBlSWRzXSA9IHJlYWRBcnJheU9mVHlwZXModGhpcywgYXJnQ291bnQsIHJhd0FyZ1R5cGVzUHRyKTtcclxuICAgIC8vY29uc29sZS5hc3NlcnQodGhpc1R5cGVJZCAhPSByYXdDbGFzc1R5cGVJZCxgSW50ZXJuYWwgZXJyb3I7IGV4cGVjdGVkIHRoZSBSVFRJIHBvaW50ZXJzIGZvciB0aGUgY2xhc3MgdHlwZSBhbmQgaXRzIHBvaW50ZXIgdHlwZSB0byBiZSBkaWZmZXJlbnQuYCk7XHJcbiAgICBfZW1iaW5kX3JlZ2lzdGVyKHRoaXMsIG1ldGhvZE5hbWVQdHIsIGFzeW5jIChuYW1lKSA9PiB7XHJcblxyXG4gICAgICAgIChFbWJvdW5kQ2xhc3Nlc1tyYXdDbGFzc1R5cGVJZF0ucHJvdG90eXBlIGFzIG5ldmVyKVtuYW1lXSA9IGF3YWl0IGNyZWF0ZUdsdWVGdW5jdGlvbihcclxuICAgICAgICAgICAgdGhpcyxcclxuICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgcmV0dXJuVHlwZUlkLFxyXG4gICAgICAgICAgICBhcmdUeXBlSWRzLFxyXG4gICAgICAgICAgICBpbnZva2VyU2lnbmF0dXJlUHRyLFxyXG4gICAgICAgICAgICBpbnZva2VySW5kZXgsXHJcbiAgICAgICAgICAgIGludm9rZXJDb250ZXh0XHJcbiAgICAgICAgKTtcclxuICAgIH0pO1xyXG59XHJcbiJdfQ==